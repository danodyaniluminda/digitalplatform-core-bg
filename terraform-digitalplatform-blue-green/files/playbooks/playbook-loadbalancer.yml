---
- name: Apply Kubernetes load balancer manifests
  hosts: localhost
  connection: local
  gather_facts: false

 # Need set Gitlab Permissions
  vars:
    ansible_python_interpreter: /usr/bin/python3
    repo_url: "https://github.com/danodyaniluminda/digitalplatform-core-bg.git"
    dest_dir: "/root/bluegreenaws"
    obj_def_path: "/root/bluegreenaws/terraform-digitalplatform-blue-green/files/artifacts/non-production"
    manifest_files:
      - "private_loadbalancer.yaml"
      - "public_loadbalancer.yaml"
    branch: "main"

  tasks:
    - name: Ensure git is installed
      yum:
        name: git
        state: present
      vars:
        ansible_python_interpreter: /usr/bin/python2

    - name: Ensure required build tools are installed
      yum:
        name:
          - gcc
          - make
          - openssl11
          - openssl11-devel
          - bzip2-devel
          - libffi-devel
          - wget
        state: present
      vars:
        ansible_python_interpreter: /usr/bin/python2

    - name: Downgrade urllib3 to <2.0 for Python3
      pip:
        name: "urllib3<2.0"
        executable: pip3

    - name: Ensure required Python packages are installed
      pip:
        name:
          - openshift
          - kubernetes
          - pyyaml
        executable: pip3

    - name: Initialize repo directory
      file:
        path: "{{ dest_dir }}"
        state: directory
        mode: '0755'
      become: yes

    - name: Clone the repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ dest_dir }}"
        version: "{{ branch }}"
        force: yes

    - name: Check if manifest files exist
      stat:
        path: "{{ obj_def_path }}/{{ item }}"
      register: manifest_stats
      loop: "{{ manifest_files }}"

    - name: Fail if any manifest file is missing
      fail:
        msg: "Manifest file not found: {{ item.stat.path }}"
      when: not item.stat.exists
      loop: "{{ manifest_stats.results }}"

    - name: Apply load balancer manifests
      k8s:
        state: present
        src: "{{ obj_def_path }}/{{ item }}"
        apply: true
      loop: "{{ manifest_files }}"